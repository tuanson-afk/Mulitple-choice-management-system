<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnLuuBaiThi.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        vGsErAAAAABJRU5ErkJggg==
</value>
  </data>
</root>